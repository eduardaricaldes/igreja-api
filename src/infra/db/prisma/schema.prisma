generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Events {
  id          String   @id @default(uuid())
  name        String
  description String?
  startDate   DateTime @map("start_date")
  endDate     DateTime @map("end_date")
  location    String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  createdBy   String?  @map("created_by")

  ResponsibilityEvents     ResponsibilityEvents[]
  EventPartipantAssignment EventPartipantAssignment[]

  @@map("events")
}

model ResponsibilityEvents {
  id        String   @id @default(uuid())
  eventId   String
  userId    String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  event Events @relation(fields: [eventId], references: [id])
  user  Users  @relation(fields: [userId], references: [id])

  @@map("responsibility_events")
}

model Participant {
  id        String   @id @default(uuid())
  eventId   String   @map("event_id")
  firstName String
  lastName  String
  email     String   @unique
  createdAt DateTime @default(now())
  createdBy String?  @map("created_by")

  EventPartipantAssignment EventPartipantAssignment[]

  @@map("participant")
}

model EventPartipantAssignment {
  id            String   @id @default(uuid())
  eventId       String   @map("event_id")
  participantId String   @map("participant_id")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  event       Events      @relation(fields: [eventId], references: [id])
  participant Participant @relation(fields: [participantId], references: [id])

  @@map("event_participant_assignment")
}

model Users {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  email     String   @unique
  password  String   @unique
  phone     String?
  createdAt DateTime @default(now())

  ResponsibilityEvents ResponsibilityEvents[]
  Role                 Role[]

  @@map("users")
}

model Role {
  id          String   @id @default(uuid())
  UserId      String
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user Users @relation(fields: [UserId], references: [id])

  @@map("role")
}
